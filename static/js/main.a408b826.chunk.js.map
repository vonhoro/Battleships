{"version":3,"sources":["functions/pickCloseTarget.js","components/Board.js","components/Ships.js","functions/placingShipsRandom.js","functions/shipConsctructor.js","App.js","serviceWorker.js","index.js"],"names":["PickCloseTarget","randomatack","otherboard","enemyjustHited","enemyhits","randomAtack","otherBoard","enemyJustHited","enemyHits","newRandomAtack","classList","length","Math","floor","random","add","document","getElementById","style","display","Board","props","squares","Squares","playerHits","Targets","nothing","className","id","onDrop","Player","e","preventDefault","target","parentElement","replaceSquaresArray","children","firstSquareReplace","parseInt","shipId","dataTransfer","getData","ship","orientation","size","i","replaceChild","onDragOver","draggable","map","square","index","GameNumber","key","onClick","Position","Play","isNaN","previousElementSibling","hitted","setTimeout","playBoard","Ships","shipTypes","dragStart","setData","dragOver","stopPropagation","Structure","shipContainer","Names","onDragStart","Drag","shipStructure","subIndex","PlacingShipsRandom","ShipPosition","newGameCheck","randomColumn","randomRow","Array","from","value","shipPosition","shipType","locateCovered","checkResult","checking","checkPrev","filter","forEach","element","slice","k","some","m","array","locateStart","locateEnd","ocuped","toString","fill","j","ShipConstructor","Carrier","Battleship","Submarine","Destroyer","numberShips","numberCarrier","numberBattleship","numberSubmarine","numberDestroyer","App","counter","useState","gameNumber","setGameNumber","gameStarted","setGameStarted","setShipPosition","setSquares","numberTargets","setNumberTargets","numberCarriers","setNumberCarriers","numberBattleships","setNumberBattleships","numberSubmarines","setNumberSubmarines","numberDestroyers","setNumberDestroyers","shipConstructor","setShipTypes","draggingShips","setDraggingShips","boardPlay","setBoardPlay","showRotate","setShowRotate","Name","Function","valueAsNumber","newGame","board1","getElementsByClassName","removeChild","board2","newPositions","type","defaultValue","min","max","onChange","container","lastChild","nextSibling","firstElementChild","gridTemplate","flexDirection","remove","shipCondition","targets","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a408b826.chunk.js","sourcesContent":["function PickCloseTarget(randomatack, otherboard, enemyjustHited, enemyhits) {\n  let randomAtack = randomatack;\n  let otherBoard = otherboard;\n  let enemyJustHited = enemyjustHited;\n  let enemyHits = enemyhits;\n  let newRandomAtack = 0;\n\n  if (randomAtack === 0) {\n    newRandomAtack = 1;\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = 10;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      do {\n        newRandomAtack = Math.floor(Math.random() * 100);\n      } while (otherBoard[newRandomAtack].classList.length > 2);\n    }\n    if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n      otherBoard[newRandomAtack].classList.add(\"blue\");\n      enemyJustHited -= 1;\n    } else {\n      otherBoard[newRandomAtack].classList.add(\"red\");\n      enemyHits -= 1;\n      enemyJustHited -= 1;\n    }\n  } else if (randomAtack === 9) {\n    newRandomAtack = 8;\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = 19;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      do {\n        newRandomAtack = Math.floor(Math.random() * 100);\n      } while (otherBoard[newRandomAtack].classList.length > 2);\n    }\n    if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n      otherBoard[newRandomAtack].classList.add(\"blue\");\n      enemyJustHited -= 1;\n    } else {\n      otherBoard[newRandomAtack].classList.add(\"red\");\n      enemyHits -= 1;\n      enemyJustHited -= 1;\n    }\n  } else if (randomAtack === 90) {\n    newRandomAtack = 80;\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = 91;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      do {\n        newRandomAtack = Math.floor(Math.random() * 100);\n      } while (otherBoard[newRandomAtack].classList.length > 2);\n    }\n    if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n      otherBoard[newRandomAtack].classList.add(\"blue\");\n      enemyJustHited -= 1;\n    } else {\n      otherBoard[newRandomAtack].classList.add(\"red\");\n      enemyHits -= 1;\n      enemyJustHited -= 1;\n    }\n  } else if (randomAtack === 99) {\n    newRandomAtack = 89;\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = 98;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      do {\n        newRandomAtack = Math.floor(Math.random() * 100);\n      } while (otherBoard[newRandomAtack].classList.length > 2);\n    }\n    if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n      otherBoard[newRandomAtack].classList.add(\"blue\");\n      enemyJustHited -= 1;\n    } else {\n      otherBoard[newRandomAtack].classList.add(\"red\");\n      enemyHits -= 1;\n      enemyJustHited -= 1;\n    }\n  } else if (randomAtack > 0 && randomAtack < 9) {\n    newRandomAtack = randomAtack + 1;\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = randomAtack + 10;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = randomAtack - 1;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      do {\n        newRandomAtack = Math.floor(Math.random() * 100);\n      } while (otherBoard[newRandomAtack].classList.length > 2);\n    }\n    if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n      otherBoard[newRandomAtack].classList.add(\"blue\");\n      enemyJustHited -= 1;\n    } else {\n      otherBoard[newRandomAtack].classList.add(\"red\");\n      enemyHits -= 1;\n      enemyJustHited -= 1;\n    }\n  } else if (randomAtack % 10 === 9) {\n    newRandomAtack = randomAtack + 10;\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = randomAtack - 1;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = randomAtack - 10;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      do {\n        newRandomAtack = Math.floor(Math.random() * 100);\n      } while (otherBoard[newRandomAtack].classList.length > 2);\n    }\n    if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n      otherBoard[newRandomAtack].classList.add(\"blue\");\n      enemyJustHited -= 1;\n    } else {\n      otherBoard[newRandomAtack].classList.add(\"red\");\n      enemyHits -= 1;\n      enemyJustHited -= 1;\n    }\n  } else if (randomAtack > 90 && randomAtack < 99) {\n    newRandomAtack = randomAtack - 10;\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = randomAtack + 1;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = randomAtack - 1;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      do {\n        newRandomAtack = Math.floor(Math.random() * 100);\n      } while (otherBoard[newRandomAtack].classList.length > 2);\n    }\n    if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n      otherBoard[newRandomAtack].classList.add(\"blue\");\n      enemyJustHited -= 1;\n    } else {\n      otherBoard[newRandomAtack].classList.add(\"red\");\n      enemyHits -= 1;\n      enemyJustHited -= 1;\n    }\n  } else if (randomAtack % 10 === 0) {\n    newRandomAtack = randomAtack + 10;\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = randomAtack + 1;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = randomAtack - 10;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      do {\n        newRandomAtack = Math.floor(Math.random() * 100);\n      } while (otherBoard[newRandomAtack].classList.length > 2);\n    }\n    if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n      otherBoard[newRandomAtack].classList.add(\"blue\");\n      enemyJustHited -= 1;\n    } else {\n      otherBoard[newRandomAtack].classList.add(\"red\");\n      enemyHits -= 1;\n      enemyJustHited -= 1;\n    }\n  } else {\n    newRandomAtack = randomAtack + 10;\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = randomAtack + 1;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = randomAtack - 10;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      newRandomAtack = randomAtack - 1;\n    }\n    if (otherBoard[newRandomAtack].classList.length > 2) {\n      do {\n        newRandomAtack = Math.floor(Math.random() * 100);\n      } while (otherBoard[newRandomAtack].classList.length > 2);\n    }\n    if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n      otherBoard[newRandomAtack].classList.add(\"blue\");\n      enemyJustHited -= 1;\n    } else {\n      otherBoard[newRandomAtack].classList.add(\"red\");\n      enemyHits -= 1;\n      enemyJustHited -= 1;\n    }\n  }\n\n  if (enemyHits === 0) {\n    document.getElementById(\"Losing-message\").style.display = \"block\";\n    return;\n  }\n  randomAtack = newRandomAtack;\n  return { randomAtack, enemyJustHited, enemyHits };\n}\nexport default PickCloseTarget;\n","import React from \"react\";\nimport PickCloseTarget from \"../functions/pickCloseTarget\";\nfunction Board(props) {\n  const squares = props.Squares;\n  let playerHits = props.Targets;\n  let enemyHits = props.Targets;\n  let enemyJustHited = props.Targets;\n  let randomAtack;\n  let newRandomAtack = 0;\n  const playBoard = (e, Position) => {\n    if (!props.Play) return;\n    if (e.target.classList.length > 2) return;\n    if (playerHits === 0) return;\n\n    if (isNaN(Position)) {\n      e.target.classList.add(\"red\");\n      playerHits -= 1;\n    } else {\n      e.target.classList.add(\"blue\");\n    }\n    if (playerHits === 0) {\n      document.getElementById(\"Winning-message\").style.display = \"block\";\n      return;\n    }\n    let otherBoard = e.target.parentElement.previousElementSibling.children;\n\n    if (enemyJustHited > enemyHits) {\n      const hitted = PickCloseTarget(\n        randomAtack,\n        otherBoard,\n        enemyJustHited,\n        enemyHits\n      );\n      randomAtack = hitted.randomAtack;\n      enemyJustHited = hitted.enemyJustHited;\n      enemyHits = hitted.enemyHits;\n      setTimeout(() => {\n        enemyHits = enemyHits * 1;\n      }, 500);\n      if (enemyHits === 0) {\n        document.getElementById(\"Losing-message\").style.display = \"block\";\n        return;\n      }\n    } else {\n      setTimeout(() => {\n        do {\n          randomAtack = Math.floor(Math.random() * 100);\n        } while (otherBoard[randomAtack].classList.length > 2);\n        if (otherBoard[randomAtack].classList[0] === \"Square\") {\n          otherBoard[randomAtack].classList.add(\"blue\");\n        } else {\n          otherBoard[randomAtack].classList.add(\"red\");\n          enemyHits -= 1;\n        }\n        if (enemyHits === 0) {\n          document.getElementById(\"Losing-message\").style.display = \"block\";\n          return;\n        }\n      }, 500);\n    }\n  };\n  const nothing = () => {};\n  const drop = (e) => {\n    e.preventDefault();\n\n    const Board = e.target.parentElement;\n\n    let replaceSquaresArray = e.target.parentElement.children;\n    let firstSquareReplace = parseInt(e.target.classList[1]);\n\n    const shipId = e.dataTransfer.getData(\"ship\");\n    const ship = document.getElementById(shipId);\n    if (ship === null) return;\n    ship.style.display = \"block\";\n    const orientation = ship.classList[1];\n    const size = ship.children.length;\n    if (orientation === \"Vertical\") {\n      if ((size - 1) * 10 + firstSquareReplace > 99) {\n        ship.style.display = \"flex\";\n        return;\n      }\n      for (let i = 1; i < size; i++) {\n        if (\n          replaceSquaresArray[firstSquareReplace + 10 * i].classList[0] !==\n          \"Square\"\n        ) {\n          ship.style.display = \"flex\";\n          return;\n        }\n      }\n\n      for (let i = 0; i < size; i++) {\n        ship.children[0].classList.add(firstSquareReplace + 10 * i);\n        Board.replaceChild(\n          ship.children[0],\n          replaceSquaresArray[firstSquareReplace + 10 * i]\n        );\n      }\n    } else {\n      for (let i = 1; i < 11; i++) {\n        if (\n          firstSquareReplace < 10 * i &&\n          size + firstSquareReplace > (i - 1) * 10 + 10\n        ) {\n          ship.style.display = \"flex\";\n          return;\n        }\n      }\n      for (let i = 1; i < size; i++) {\n        if (\n          replaceSquaresArray[firstSquareReplace + 1 * i].classList[0] !==\n          \"Square\"\n        ) {\n          ship.style.display = \"flex\";\n          return;\n        }\n      }\n\n      for (let i = 0; i < size; i++) {\n        ship.children[0].classList.add(firstSquareReplace + 1 * i);\n        Board.replaceChild(\n          ship.children[0],\n          replaceSquaresArray[firstSquareReplace + 1 * i]\n        );\n      }\n    }\n    ship.style.display = \"none\";\n  };\n  const dragOver = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div\n      className={props.className}\n      id={props.id}\n      onDrop={props.Player === 1 ? drop : nothing}\n      onDragOver={dragOver}\n      draggable=\"false\"\n    >\n      {squares.map((square, index) => (\n        <div\n          className={`Square ${index - 100 * (props.GameNumber - 1)}`}\n          key={index}\n          onClick={\n            props.Player === 2\n              ? (e) =>\n                  playBoard(\n                    e,\n                    props.Position[index - 100 * (props.GameNumber - 1)]\n                  )\n              : nothing\n          }\n        ></div>\n      ))}\n    </div>\n  );\n}\nexport default Board;\n","import React from \"react\";\n\nfunction Ships(props) {\n  let shipTypes = props.Ships;\n\n  const dragStart = (e) => {\n    const target = e.target;\n    e.dataTransfer.setData(\"ship\", target.id);\n  };\n  const dragOver = (e) => {\n    e.stopPropagation();\n  };\n\n  return (\n    <div className=\"Ships\">\n      {shipTypes.Structure.map((shipContainer, index) => (\n        <div\n          className={shipTypes.Names[index] + \"-container  Vertical\"}\n          id={index}\n          key={index + 1}\n          onDragStart={dragStart}\n          onDragOver={dragOver}\n          draggable={props.Drag}\n        >\n          {shipContainer.map((shipStructure, subIndex) => (\n            <div className={shipTypes.Names[index]} key={subIndex}>\n              {shipStructure}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default Ships;\n","function PlacingShipsRandom(ShipPosition, shipTypes, newGameCheck) {\n  if (newGameCheck) {\n    let shipPosition = Array.from(Array(100)).map(\n      (value, index) => (value = index + 1)\n    );\n\n    return shipPosition;\n  }\n  let vertical;\n  let randomColumn;\n  let randomRow;\n  let shipPosition = ShipPosition;\n  let shipType = shipTypes.Structure;\n\n  for (const ship of shipType) {\n    vertical = Math.floor(Math.random() * 100) > 50 ? true : false;\n\n    if (vertical) {\n      let locateCovered;\n      let checkResult;\n      let checking;\n      do {\n        checkResult = 0;\n        randomColumn = Math.floor(Math.random() * 10);\n        randomRow = Math.floor(Math.random() * (10 - ship.length));\n        locateCovered = randomColumn + randomRow * 10;\n        let checkPrev = shipPosition.filter((value) => isNaN(value));\n        if (checkPrev.length !== 0) {\n          checkPrev.forEach((element, index) => {\n            checkPrev[index] = parseInt(element.slice(1));\n          });\n        }\n        let k = 0;\n        for (const element of ship) {\n          checking = checkPrev.some(\n            (element) => element === locateCovered + k * 10\n          );\n          k += 1;\n          if (checking) checkResult += 1;\n        }\n      } while (checkResult > 0);\n      let m = 0;\n      ship.forEach((element, index, array) => {\n        let locateStart = randomColumn + 10 * m + randomRow * 10;\n        let locateEnd = locateStart + 1;\n        let ocuped = \"a\" + locateStart.toString();\n        shipPosition.fill(ocuped, locateStart, locateEnd);\n        m += 1;\n      });\n    } else {\n      let locateStart;\n      let checkResult;\n      let checking;\n      do {\n        checkResult = 0;\n        randomColumn = Math.floor(Math.random() * (10 - ship.length));\n        randomRow = Math.floor(Math.random() * 10);\n        locateStart = randomColumn + randomRow * 10;\n        let checkPrev = shipPosition.filter((value) => isNaN(value));\n        if (checkPrev.length !== 0) {\n          checkPrev.forEach((element, index) => {\n            checkPrev[index] = parseInt(element.slice(1));\n          });\n        }\n        let k = 0;\n        for (const elemnt of ship) {\n          checking = checkPrev.some(\n            (element) => element === locateStart + k * 1\n          );\n          k += 1;\n          if (checking) checkResult += 1;\n        }\n      } while (checkResult > 0);\n\n      for (let j = 0; j < ship.length; j += 1) {\n        let ocuped = \"a\" + (locateStart + j).toString();\n        shipPosition.fill(ocuped, locateStart + j, locateStart + j + 1);\n      }\n    }\n  }\n\n  return shipPosition;\n}\nexport default PlacingShipsRandom;\n","function ShipConstructor(Carrier, Battleship, Submarine, Destroyer) {\n  let numberShips =\n    parseInt(Carrier) +\n    parseInt(Battleship) +\n    parseInt(Submarine) +\n    parseInt(Destroyer);\n  let numberCarrier = Carrier;\n  let numberBattleship = Battleship;\n  let numberSubmarine = Submarine;\n  let numberDestroyer = Destroyer;\n  let Names = Array.from(Array(numberShips)).map((value) => {\n    if (numberCarrier > 0) {\n      value = \"Carrier\";\n      numberCarrier -= 1;\n    } else if (numberBattleship > 0) {\n      value = \"BattleShip\";\n      numberBattleship -= 1;\n    } else if (numberSubmarine > 0) {\n      value = \"Submarine\";\n      numberSubmarine -= 1;\n    } else if (numberDestroyer > 0) {\n      value = \"Destroyer\";\n      numberDestroyer -= 1;\n    }\n    return value;\n  });\n  numberCarrier = Carrier;\n  numberBattleship = Battleship;\n  numberSubmarine = Submarine;\n  numberDestroyer = Destroyer;\n  let Structure = Array.from(Array(numberShips)).map((value) => {\n    if (numberCarrier > 0) {\n      value = [\"\", \"\", \"\", \"\", \"\"];\n      numberCarrier -= 1;\n    } else if (numberBattleship > 0) {\n      value = [\"\", \"\", \"\", \"\"];\n      numberBattleship -= 1;\n    } else if (numberSubmarine > 0) {\n      value = [\"\", \"\", \"\"];\n      numberSubmarine -= 1;\n    } else if (numberDestroyer > 0) {\n      value = [\"\", \"\"];\n      numberDestroyer -= 1;\n    }\n    return value;\n  });\n\n  return { Structure, Names };\n}\nexport default ShipConstructor;\n","import React, { useState } from \"react\";\nimport Board from \"./components/Board\";\nimport Ships from \"./components/Ships\";\nimport PlacingShipsRandom from \"./functions/placingShipsRandom\";\nimport shipConstructor from \"./functions/shipConsctructor\";\nfunction App() {\n  let counter;\n  const [gameNumber, setGameNumber] = useState(1);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [shipPosition, setShipPosition] = useState(\n    Array.from(Array(100)).map((value, index) => (value = index + 1))\n  );\n  const [squares, setSquares] = useState(\n    Array.from(Array(100)).map((value, index) => (value = index + 1))\n  );\n\n  const [numberTargets, setNumberTargets] = useState(100);\n  const [numberCarriers, setNumberCarriers] = useState(1);\n  const [numberBattleships, setNumberBattleships] = useState(1);\n  const [numberSubmarines, setNumberSubmarines] = useState(1);\n  const [numberDestroyers, setNumberDestroyers] = useState(1);\n  const [shipTypes, setShipTypes] = useState(\n    shipConstructor(\n      numberCarriers,\n      numberBattleships,\n      numberSubmarines,\n      numberDestroyers\n    )\n  );\n  const [draggingShips, setDraggingShips] = useState(false);\n  const [boardPlay, setBoardPlay] = useState(false);\n  const [showRotate, setShowRotate] = useState(false);\n\n  const changeCarriers = (e) => {\n    if (e.target.value === \"\") return;\n    if (e.target.valueAsNumber > 4) return;\n    setNumberCarriers(e.target.valueAsNumber);\n\n    setShipTypes(\n      shipConstructor(\n        e.target.valueAsNumber,\n        numberBattleships,\n        numberSubmarines,\n        numberDestroyers\n      )\n    );\n  };\n  const changeBattleships = (e) => {\n    if (e.target.value === \"\") return;\n    if (e.target.valueAsNumber > 4) return;\n    setNumberBattleships(e.target.value);\n    setShipTypes(\n      shipConstructor(\n        numberCarriers,\n        e.target.valueAsNumber,\n        numberSubmarines,\n        numberDestroyers\n      )\n    );\n  };\n  const changeSubmarines = (e) => {\n    if (e.target.value === \"\") return;\n    if (e.target.valueAsNumber > 4) return;\n    setNumberSubmarines(e.target.valueAsNumber);\n    setShipTypes(\n      shipConstructor(\n        numberCarriers,\n        numberBattleships,\n        e.target.valueAsNumber,\n        numberDestroyers\n      )\n    );\n  };\n  const changeDestroyers = (e) => {\n    if (e.target.value === \"\") return;\n    if (e.target.valueAsNumber > 4) return;\n    setNumberDestroyers(e.target.valueAsNumber);\n    setShipTypes(\n      shipConstructor(\n        numberCarriers,\n        numberBattleships,\n        numberSubmarines,\n        e.target.valueAsNumber\n      )\n    );\n  };\n  const placePieces = (e) => {\n    if (shipTypes.Structure.length === 0) return;\n    const form = Array.from(e.target.parentElement.children);\n    form.forEach((container) => {\n      container.lastChild.value = \"0\";\n    });\n    e.target.parentElement.style.display = \"none\";\n    setDraggingShips(true);\n    setShowRotate(true);\n  };\n  const numberShips = [\n    { Name: \"Carriers\", Function: changeCarriers },\n    { Name: \"Battleships\", Function: changeBattleships },\n    { Name: \"Submarines\", Function: changeSubmarines },\n    { Name: \"Destroyers\", Function: changeDestroyers },\n  ];\n\n  const startGame = (e) => {\n    const shipCondition = e.target.nextSibling.firstElementChild.children;\n    for (const container of shipCondition) {\n      if (container.style.display !== \"none\") return;\n    }\n    if (gameStarted) return;\n    setGameStarted(true);\n    setShowRotate(false);\n    setBoardPlay(true);\n    setShipPosition(PlacingShipsRandom(shipPosition, shipTypes, false));\n    const targets = shipPosition.filter((value) => isNaN(value));\n    setNumberTargets(targets.length);\n  };\n  const newGame = (e) => {\n    counter = gameNumber + 1;\n    setGameNumber(counter);\n    const board1 = document.getElementsByClassName(\"Board-P1\")[0];\n    const board1Array = Array.from(\n      document.getElementsByClassName(\"Board-P1\")[0].children\n    );\n\n    board1Array.forEach((square) => {\n      board1.removeChild(square);\n    });\n\n    const board2 = document.getElementsByClassName(\"Board-P2\")[0];\n\n    const board2Array = Array.from(\n      document.getElementsByClassName(\"Board-P2\")[0].children\n    );\n    board2Array.forEach((square) => {\n      board2.removeChild(square);\n    });\n\n    setSquares(\n      Array.from(Array(counter * 100)).map(\n        (value, index) => (value = index + 1)\n      )\n    );\n\n    const newPositions = Array.from(Array(100)).map(\n      (value, index) => (value = index + 1)\n    );\n    setShipTypes(shipConstructor(0, 0, 0, 0));\n    setShipPosition(PlacingShipsRandom(newPositions, shipTypes, true));\n    setGameStarted(false);\n    setDraggingShips(false);\n    setBoardPlay(false);\n    setNumberCarriers(0);\n    setNumberBattleships(0);\n    setNumberSubmarines(0);\n    setNumberDestroyers(0);\n\n    document.getElementsByClassName(\"game-chacarteristics\")[0].style.display =\n      \"flex\";\n\n    e.target.parentElement.style.display = \"none\";\n  };\n  const rotate = (e) => {\n    const shipContainer = e.target.nextSibling.nextSibling.firstElementChild;\n\n    if (shipContainer.style.gridTemplate === \"none / auto auto auto auto\") {\n      for (const container of shipContainer.children) {\n        container.style.flexDirection = \"row\";\n        container.classList.remove(\"Vertical\");\n        container.classList.add(\"Horizontal\");\n      }\n      shipContainer.style.gridTemplate = \"auto auto auto auto / none\";\n    } else if (\n      shipContainer.style.gridTemplate === \"auto auto auto auto / none\"\n    ) {\n      for (const container of shipContainer.children) {\n        container.style.flexDirection = \"column\";\n        container.classList.add(\"Vertical\");\n        container.classList.remove(\"Horizontal\");\n      }\n      shipContainer.style.gridTemplate = \"none/ auto auto auto auto\";\n    } else {\n      for (const container of shipContainer.children) {\n        container.style.flexDirection = \"row\";\n        container.classList.remove(\"Vertical\");\n        container.classList.add(\"Horizontal\");\n      }\n      shipContainer.style.gridTemplate = \"auto auto auto auto / none\";\n    }\n  };\n  return (\n    <div className=\"App\">\n      <h1 className=\"Title\">Battleship!! </h1>\n      <p>\n        Pick the numbers of Carriers, Battleships, Submarines and\n        Dedededestroyers! from 0 to 4. Put drag them to the left board! click\n        Start game and try to defeat your rival by shooting on its map!\n      </p>\n      <div className=\"game-chacarteristics\">\n        {numberShips.map((value, index) => (\n          <div className={`${value.Name}-number-container`} key={index}>\n            <label className={`${value.Name}-number-label`}>\n              Number of {value.Name}\n            </label>\n            <input\n              type=\"number\"\n              defaultValue=\"1\"\n              min=\"0\"\n              max=\"4\"\n              onChange={value.Function}\n            />\n          </div>\n        ))}\n        <button type=\"button\" onClick={placePieces}>\n          Accept\n        </button>\n      </div>\n      <button onClick={rotate} className={showRotate ? \"Rotate\" : \"Invisible\"}>\n        Rotate\n      </button>\n      <button onClick={startGame} className=\"start-game\">\n        Start game\n      </button>\n\n      <div className=\"Boards\">\n        <Ships Drag={draggingShips} Ships={shipTypes}></Ships>\n\n        <Board\n          Play={false}\n          Squares={squares}\n          className=\"Board-P1\"\n          Player={1}\n          Position=\"\"\n          GameNumber={gameNumber}\n        />\n        <Board\n          Play={boardPlay}\n          Squares={squares}\n          className=\"Board-P2\"\n          Player={2}\n          Position={shipPosition}\n          Targets={numberTargets}\n          GameNumber={gameNumber}\n        />\n      </div>\n\n      <div id=\"Winning-message\">\n        <h1>You Won :)</h1>\n        <button onClick={newGame} className=\"play-again\">\n          Play Again!\n        </button>\n      </div>\n      <div id=\"Losing-message\">\n        <h1>You Lost :( </h1>\n        <button onClick={newGame} className=\"play-again\">\n          Play Again!\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}