{"version":3,"sources":["components/Board.js","components/Ships.js","functions/placingShipsRandom.js","functions/shipConsctructor.js","App.js","serviceWorker.js","index.js"],"names":["Board","props","randomAtack","squares","Squares","playerHits","Targets","enemyHits","enemyJustHited","newRandomAtack","nothing","className","id","onDrop","e","preventDefault","target","parentElement","replaceSquaresArray","children","firstSquareReplace","parseInt","classList","shipId","dataTransfer","getData","ship","document","getElementById","style","display","orientation","size","length","i","add","replaceChild","onDragOver","draggable","map","square","index","GameNumber","key","onClick","Player","Position","Play","isNaN","otherBoard","previousElementSibling","setTimeout","Math","floor","random","playBoard","Ships","shipTypes","dragStart","setData","dragOver","stopPropagation","Structure","shipContainer","Names","onDragStart","Drag","shipStructure","subIndex","PlacingShipsRandom","ShipPosition","newGameCheck","shipPosition","Array","from","value","console","log","randomColumn","randomRow","shipType","locateCovered","checkResult","checking","checkPrev","filter","forEach","element","slice","k","some","m","array","locateStart","locateEnd","ocuped","toString","fill","j","ShipConstructor","Carrier","Battleship","Submarine","Destroyer","numberShips","numberCarrier","numberBattleship","numberSubmarine","numberDestroyer","App","counter","useState","gameNumber","setGameNumber","setShipPosition","setSquares","numberTargets","setNumberTargets","numberCarriers","setNumberCarriers","numberBattleships","setNumberBattleships","numberSubmarines","setNumberSubmarines","numberDestroyers","setNumberDestroyers","shipConstructor","setShipTypes","draggingShips","setDraggingShips","boardPlay","setBoardPlay","Name","Function","valueAsNumber","newGame","board1","getElementsByClassName","removeChild","board2","newPositions","type","defaultValue","min","max","onChange","form","container","lastChild","nextSibling","firstElementChild","gridTemplate","flexDirection","remove","shipCondition","targets","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.658696df.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nfunction Board(props) {\n  const squares = props.Squares;\n  let playerHits = props.Targets;\n  let enemyHits = props.Targets;\n  let enemyJustHited = props.Targets;\n  let randomAtack;\n  let newRandomAtack = 0;\n  const playBoard = (e, Position) => {\n    if (!props.Play) return;\n    if (e.target.classList.length > 2) return;\n    if (playerHits === 0) return;\n\n    if (isNaN(Position)) {\n      e.target.classList.add(\"red\");\n      playerHits -= 1;\n    } else {\n      e.target.classList.add(\"blue\");\n    }\n    if (playerHits === 0) {\n      document.getElementById(\"Winning-message\").style.display = \"block\";\n      return;\n    }\n    let otherBoard = e.target.parentElement.previousElementSibling.children;\n\n    if (enemyJustHited > enemyHits) {\n      setTimeout(() => {\n        if (randomAtack === 0) {\n          newRandomAtack = 1;\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = 10;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            do {\n              newRandomAtack = Math.floor(Math.random() * 100);\n            } while (otherBoard[newRandomAtack].classList.length > 2);\n          }\n          if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n            otherBoard[newRandomAtack].classList.add(\"blue\");\n            enemyJustHited -= 1;\n          } else {\n            otherBoard[newRandomAtack].classList.add(\"red\");\n            enemyHits -= 1;\n            enemyJustHited -= 1;\n          }\n        } else if (randomAtack === 9) {\n          newRandomAtack = 8;\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = 19;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            do {\n              newRandomAtack = Math.floor(Math.random() * 100);\n            } while (otherBoard[newRandomAtack].classList.length > 2);\n          }\n          if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n            otherBoard[newRandomAtack].classList.add(\"blue\");\n            enemyJustHited -= 1;\n          } else {\n            otherBoard[newRandomAtack].classList.add(\"red\");\n            enemyHits -= 1;\n            enemyJustHited -= 1;\n          }\n        } else if (randomAtack === 90) {\n          newRandomAtack = 80;\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = 91;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            do {\n              newRandomAtack = Math.floor(Math.random() * 100);\n            } while (otherBoard[newRandomAtack].classList.length > 2);\n          }\n          if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n            otherBoard[newRandomAtack].classList.add(\"blue\");\n            enemyJustHited -= 1;\n          } else {\n            otherBoard[newRandomAtack].classList.add(\"red\");\n            enemyHits -= 1;\n            enemyJustHited -= 1;\n          }\n        } else if (randomAtack === 99) {\n          newRandomAtack = 89;\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = 98;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            do {\n              newRandomAtack = Math.floor(Math.random() * 100);\n            } while (otherBoard[newRandomAtack].classList.length > 2);\n          }\n          if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n            otherBoard[newRandomAtack].classList.add(\"blue\");\n            enemyJustHited -= 1;\n          } else {\n            otherBoard[newRandomAtack].classList.add(\"red\");\n            enemyHits -= 1;\n            enemyJustHited -= 1;\n          }\n        } else if (randomAtack > 0 && randomAtack < 9) {\n          newRandomAtack = randomAtack + 1;\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = randomAtack + 10;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = randomAtack - 1;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            do {\n              newRandomAtack = Math.floor(Math.random() * 100);\n            } while (otherBoard[newRandomAtack].classList.length > 2);\n          }\n          if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n            otherBoard[newRandomAtack].classList.add(\"blue\");\n            enemyJustHited -= 1;\n          } else {\n            otherBoard[newRandomAtack].classList.add(\"red\");\n            enemyHits -= 1;\n            enemyJustHited -= 1;\n          }\n        } else if (randomAtack % 10 === 9) {\n          newRandomAtack = randomAtack + 10;\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = randomAtack - 1;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = randomAtack - 10;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            do {\n              newRandomAtack = Math.floor(Math.random() * 100);\n            } while (otherBoard[newRandomAtack].classList.length > 2);\n          }\n          if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n            otherBoard[newRandomAtack].classList.add(\"blue\");\n            enemyJustHited -= 1;\n          } else {\n            otherBoard[newRandomAtack].classList.add(\"red\");\n            enemyHits -= 1;\n            enemyJustHited -= 1;\n          }\n        } else if (randomAtack > 90 && randomAtack < 99) {\n          newRandomAtack = randomAtack - 10;\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = randomAtack + 1;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = randomAtack - 1;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            do {\n              newRandomAtack = Math.floor(Math.random() * 100);\n            } while (otherBoard[newRandomAtack].classList.length > 2);\n          }\n          if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n            otherBoard[newRandomAtack].classList.add(\"blue\");\n            enemyJustHited -= 1;\n          } else {\n            otherBoard[newRandomAtack].classList.add(\"red\");\n            enemyHits -= 1;\n            enemyJustHited -= 1;\n          }\n        } else if (randomAtack % 10 === 0) {\n          newRandomAtack = randomAtack + 10;\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = randomAtack + 1;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = randomAtack - 10;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            do {\n              newRandomAtack = Math.floor(Math.random() * 100);\n            } while (otherBoard[newRandomAtack].classList.length > 2);\n          }\n          if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n            otherBoard[newRandomAtack].classList.add(\"blue\");\n            enemyJustHited -= 1;\n          } else {\n            otherBoard[newRandomAtack].classList.add(\"red\");\n            enemyHits -= 1;\n            enemyJustHited -= 1;\n          }\n        } else {\n          newRandomAtack = randomAtack + 10;\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = randomAtack + 1;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = randomAtack - 10;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            newRandomAtack = randomAtack - 1;\n          }\n          if (otherBoard[newRandomAtack].classList.length > 2) {\n            do {\n              newRandomAtack = Math.floor(Math.random() * 100);\n            } while (otherBoard[newRandomAtack].classList.length > 2);\n          }\n          if (otherBoard[newRandomAtack].classList[0] === \"Square\") {\n            otherBoard[newRandomAtack].classList.add(\"blue\");\n            enemyJustHited -= 1;\n          } else {\n            otherBoard[newRandomAtack].classList.add(\"red\");\n            enemyHits -= 1;\n            enemyJustHited -= 1;\n          }\n        }\n\n        if (enemyHits === 0) {\n          document.getElementById(\"Losing-message\").style.display = \"block\";\n          return;\n        }\n        randomAtack = newRandomAtack;\n      }, 500);\n    } else {\n      setTimeout(() => {\n        do {\n          randomAtack = Math.floor(Math.random() * 100);\n        } while (otherBoard[randomAtack].classList.length > 2);\n        if (otherBoard[randomAtack].classList[0] === \"Square\") {\n          otherBoard[randomAtack].classList.add(\"blue\");\n        } else {\n          otherBoard[randomAtack].classList.add(\"red\");\n          enemyHits -= 1;\n        }\n        if (enemyHits === 0) {\n          document.getElementById(\"Losing-message\").style.display = \"block\";\n          return;\n        }\n      }, 500);\n    }\n  };\n  const nothing = () => {};\n  const drop = (e) => {\n    e.preventDefault();\n\n    const Board = e.target.parentElement;\n\n    let replaceSquaresArray = e.target.parentElement.children;\n    let firstSquareReplace = parseInt(e.target.classList[1]);\n\n    const shipId = e.dataTransfer.getData(\"ship\");\n    const ship = document.getElementById(shipId);\n    if (ship === null) return;\n    ship.style.display = \"block\";\n    const orientation = ship.classList[1];\n    const size = ship.children.length;\n    if (orientation === \"Vertical\") {\n      if ((size - 1) * 10 + firstSquareReplace > 99) {\n        ship.style.display = \"flex\";\n        return;\n      }\n      for (let i = 1; i < size; i++) {\n        if (\n          replaceSquaresArray[firstSquareReplace + 10 * i].classList[0] !==\n          \"Square\"\n        ) {\n          ship.style.display = \"flex\";\n          return;\n        }\n      }\n\n      for (let i = 0; i < size; i++) {\n        ship.children[0].classList.add(firstSquareReplace + 10 * i);\n        Board.replaceChild(\n          ship.children[0],\n          replaceSquaresArray[firstSquareReplace + 10 * i]\n        );\n      }\n    } else {\n      for (let i = 1; i < 11; i++) {\n        if (\n          firstSquareReplace < 10 * i &&\n          size + firstSquareReplace > (i - 1) * 10 + 10\n        ) {\n          ship.style.display = \"flex\";\n          return;\n        }\n      }\n      for (let i = 1; i < size; i++) {\n        if (\n          replaceSquaresArray[firstSquareReplace + 1 * i].classList[0] !==\n          \"Square\"\n        ) {\n          ship.style.display = \"flex\";\n          return;\n        }\n      }\n\n      for (let i = 0; i < size; i++) {\n        ship.children[0].classList.add(firstSquareReplace + 1 * i);\n        Board.replaceChild(\n          ship.children[0],\n          replaceSquaresArray[firstSquareReplace + 1 * i]\n        );\n      }\n    }\n    ship.style.display = \"none\";\n  };\n  const dragOver = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div\n      className={props.className}\n      id={props.id}\n      onDrop={drop}\n      onDragOver={dragOver}\n      draggable=\"false\"\n    >\n      {squares.map((square, index) => (\n        <div\n          className={`Square ${index - 100 * (props.GameNumber - 1)}`}\n          key={index}\n          onClick={\n            props.Player === 2\n              ? (e) =>\n                  playBoard(\n                    e,\n                    props.Position[index - 100 * (props.GameNumber - 1)]\n                  )\n              : nothing\n          }\n        >\n          {index - 100 * (props.GameNumber - 1)}\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default Board;\n","import React, { useState, useEffect } from \"react\";\n\nfunction Ships(props) {\n  let shipTypes = props.Ships;\n\n  const dragStart = (e) => {\n    const target = e.target;\n    e.dataTransfer.setData(\"ship\", target.id);\n  };\n  const dragOver = (e) => {\n    e.stopPropagation();\n  };\n  const drop = (e) => {\n    e.preventDefault();\n    console.log(e.target);\n  };\n  return (\n    <div className=\"Ships\">\n      {shipTypes.Structure.map((shipContainer, index) => (\n        <div\n          className={shipTypes.Names[index] + \"-container  Vertical\"}\n          id={index}\n          key={index + 1}\n          onDragStart={dragStart}\n          onDragOver={dragOver}\n          draggable={props.Drag}\n        >\n          {shipContainer.map((shipStructure, subIndex) => (\n            <div className={shipTypes.Names[index]} key={subIndex}>\n              {shipStructure}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default Ships;\n","function PlacingShipsRandom(ShipPosition, shipTypes, newGameCheck) {\n  if (newGameCheck) {\n    let shipPosition = Array.from(Array(100)).map(\n      (value, index) => (value = index + 1)\n    );\n    console.log(shipPosition);\n    return shipPosition;\n  }\n  let vertical;\n  let randomColumn;\n  let randomRow;\n  let shipPosition = ShipPosition;\n  let shipType = shipTypes.Structure;\n\n  for (const ship of shipType) {\n    console.log(ship);\n    vertical = Math.floor(Math.random() * 100) > 50 ? true : false;\n\n    if (vertical) {\n      let locateCovered;\n      let checkResult;\n      let checking;\n      do {\n        checkResult = 0;\n        randomColumn = Math.floor(Math.random() * 10);\n        randomRow = Math.floor(Math.random() * (10 - ship.length));\n        locateCovered = randomColumn + randomRow * 10;\n        let checkPrev = shipPosition.filter((value) => isNaN(value));\n        if (checkPrev.length !== 0) {\n          checkPrev.forEach((element, index) => {\n            checkPrev[index] = parseInt(element.slice(1));\n          });\n        }\n        let k = 0;\n        for (const element of ship) {\n          checking = checkPrev.some(\n            (element) => element === locateCovered + k * 10\n          );\n          k += 1;\n          if (checking) checkResult += 1;\n        }\n      } while (checkResult > 0);\n      let m = 0;\n      ship.forEach((element, index, array) => {\n        let locateStart = randomColumn + 10 * m + randomRow * 10;\n        let locateEnd = locateStart + 1;\n        let ocuped = \"a\" + locateStart.toString();\n        shipPosition.fill(ocuped, locateStart, locateEnd);\n        m += 1;\n      });\n    } else {\n      let locateStart;\n      let checkResult;\n      let checking;\n      do {\n        checkResult = 0;\n        randomColumn = Math.floor(Math.random() * (10 - ship.length));\n        randomRow = Math.floor(Math.random() * 10);\n        locateStart = randomColumn + randomRow * 10;\n        let checkPrev = shipPosition.filter((value) => isNaN(value));\n        if (checkPrev.length !== 0) {\n          checkPrev.forEach((element, index) => {\n            checkPrev[index] = parseInt(element.slice(1));\n          });\n        }\n        let k = 0;\n        for (const elemnt of ship) {\n          checking = checkPrev.some(\n            (element) => element === locateStart + k * 1\n          );\n          k += 1;\n          if (checking) checkResult += 1;\n        }\n      } while (checkResult > 0);\n\n      console.log(ship);\n      for (let j = 0; j < ship.length; j += 1) {\n        let ocuped = \"a\" + (locateStart + j).toString();\n        shipPosition.fill(ocuped, locateStart + j, locateStart + j + 1);\n      }\n    }\n  }\n  console.log(shipPosition);\n  return shipPosition;\n}\nexport default PlacingShipsRandom;\n","function ShipConstructor(Carrier, Battleship, Submarine, Destroyer) {\n  let numberShips =\n    parseInt(Carrier) +\n    parseInt(Battleship) +\n    parseInt(Submarine) +\n    parseInt(Destroyer);\n  let numberCarrier = Carrier;\n  let numberBattleship = Battleship;\n  let numberSubmarine = Submarine;\n  let numberDestroyer = Destroyer;\n  let Names = Array.from(Array(numberShips)).map((value) => {\n    if (numberCarrier > 0) {\n      value = \"Carrier\";\n      numberCarrier -= 1;\n    } else if (numberBattleship > 0) {\n      value = \"BattleShip\";\n      numberBattleship -= 1;\n    } else if (numberSubmarine > 0) {\n      value = \"Submarine\";\n      numberSubmarine -= 1;\n    } else if (numberDestroyer > 0) {\n      value = \"Destroyer\";\n      numberDestroyer -= 1;\n    }\n    return value;\n  });\n  numberCarrier = Carrier;\n  numberBattleship = Battleship;\n  numberSubmarine = Submarine;\n  numberDestroyer = Destroyer;\n  let Structure = Array.from(Array(numberShips)).map((value) => {\n    if (numberCarrier > 0) {\n      value = [\"\", \"\", \"\", \"\", \"\"];\n      numberCarrier -= 1;\n    } else if (numberBattleship > 0) {\n      value = [\"\", \"\", \"\", \"\"];\n      numberBattleship -= 1;\n    } else if (numberSubmarine > 0) {\n      value = [\"\", \"\", \"\"];\n      numberSubmarine -= 1;\n    } else if (numberDestroyer > 0) {\n      value = [\"\", \"\"];\n      numberDestroyer -= 1;\n    }\n    return value;\n  });\n\n  return { Structure, Names };\n}\nexport default ShipConstructor;\n","import React, { useState } from \"react\";\nimport Board from \"./components/Board\";\nimport Ships from \"./components/Ships\";\nimport PlacingShipsRandom from \"./functions/placingShipsRandom\";\nimport shipConstructor from \"./functions/shipConsctructor\";\nfunction App() {\n  let counter;\n  const [gameNumber, setGameNumber] = useState(1);\n  const [shipPosition, setShipPosition] = useState(\n    Array.from(Array(100)).map((value, index) => (value = index + 1))\n  );\n  const [squares, setSquares] = useState(\n    Array.from(Array(100)).map((value, index) => (value = index + 1))\n  );\n  const [numberTargets, setNumberTargets] = useState(100);\n  const [numberCarriers, setNumberCarriers] = useState(0);\n  const [numberBattleships, setNumberBattleships] = useState(0);\n  const [numberSubmarines, setNumberSubmarines] = useState(0);\n  const [numberDestroyers, setNumberDestroyers] = useState(0);\n  const [shipTypes, setShipTypes] = useState(\n    shipConstructor(\n      numberCarriers,\n      numberBattleships,\n      numberSubmarines,\n      numberDestroyers\n    )\n  );\n  const [draggingShips, setDraggingShips] = useState(false);\n  const [boardPlay, setBoardPlay] = useState(false);\n  const changeCarriers = (e) => {\n    if (e.target.value === \"\") return;\n    if (e.target.valueAsNumber > 4) return;\n    setNumberCarriers(e.target.valueAsNumber);\n\n    setShipTypes(\n      shipConstructor(\n        e.target.valueAsNumber,\n        numberBattleships,\n        numberSubmarines,\n        numberDestroyers\n      )\n    );\n  };\n  const changeBattleships = (e) => {\n    if (e.target.value === \"\") return;\n    if (e.target.valueAsNumber > 4) return;\n    setNumberBattleships(e.target.value);\n    setShipTypes(\n      shipConstructor(\n        numberCarriers,\n        e.target.valueAsNumber,\n        numberSubmarines,\n        numberDestroyers\n      )\n    );\n  };\n  const changeSubmarines = (e) => {\n    if (e.target.value === \"\") return;\n    if (e.target.valueAsNumber > 4) return;\n    setNumberSubmarines(e.target.valueAsNumber);\n    setShipTypes(\n      shipConstructor(\n        numberCarriers,\n        numberBattleships,\n        e.target.valueAsNumber,\n        numberDestroyers\n      )\n    );\n  };\n  const changeDestroyers = (e) => {\n    if (e.target.value === \"\") return;\n    if (e.target.valueAsNumber > 4) return;\n    setNumberDestroyers(e.target.valueAsNumber);\n    setShipTypes(\n      shipConstructor(\n        numberCarriers,\n        numberBattleships,\n        numberSubmarines,\n        e.target.valueAsNumber\n      )\n    );\n  };\n  const placePieces = (e) => {\n    const form = Array.from(e.target.parentElement.children);\n    console.log(form);\n    form.forEach((container) => {\n      container.lastChild.value = \"0\";\n    });\n    e.target.parentElement.style.display = \"none\";\n    setDraggingShips(true);\n  };\n  const numberShips = [\n    { Name: \"Carriers\", Function: changeCarriers },\n    { Name: \"Battleships\", Function: changeBattleships },\n    { Name: \"Submarines\", Function: changeSubmarines },\n    { Name: \"Destroyers\", Function: changeDestroyers },\n  ];\n\n  const startGame = (e) => {\n    const shipCondition = e.target.nextSibling.firstElementChild.children;\n    for (const container of shipCondition) {\n      if (container.style.display !== \"none\") return;\n    }\n\n    setBoardPlay(true);\n    setShipPosition(PlacingShipsRandom(shipPosition, shipTypes, false));\n    const targets = shipPosition.filter((value) => isNaN(value));\n    setNumberTargets(targets.length);\n  };\n  const newGame = (e) => {\n    counter = gameNumber + 1;\n    setGameNumber(counter);\n    const board1 = document.getElementsByClassName(\"Board-P1\")[0];\n    const board1Array = Array.from(\n      document.getElementsByClassName(\"Board-P1\")[0].children\n    );\n\n    board1Array.forEach((square) => {\n      board1.removeChild(square);\n    });\n\n    const board2 = document.getElementsByClassName(\"Board-P2\")[0];\n\n    const board2Array = Array.from(\n      document.getElementsByClassName(\"Board-P2\")[0].children\n    );\n    board2Array.forEach((square) => {\n      board2.removeChild(square);\n    });\n\n    setSquares(\n      Array.from(Array(counter * 100)).map(\n        (value, index) => (value = index + 1)\n      )\n    );\n\n    const newPositions = Array.from(Array(100)).map(\n      (value, index) => (value = index + 1)\n    );\n    setShipTypes(shipConstructor(0, 0, 0, 0));\n    setShipPosition(PlacingShipsRandom(newPositions, shipTypes, true));\n    setDraggingShips(false);\n    setBoardPlay(false);\n    setNumberCarriers(0);\n    setNumberBattleships(0);\n    setNumberSubmarines(0);\n    setNumberDestroyers(0);\n\n    document.getElementsByClassName(\"game-chacarteristics\")[0].style.display =\n      \"block\";\n\n    e.target.parentElement.style.display = \"none\";\n  };\n  const rotate = (e) => {\n    const shipContainer = e.target.nextSibling.nextSibling.firstElementChild;\n\n    if (shipContainer.style.gridTemplate === \"none / auto auto auto auto\") {\n      for (const container of shipContainer.children) {\n        container.style.flexDirection = \"row\";\n        container.classList.remove(\"Vertical\");\n        container.classList.add(\"Horizontal\");\n      }\n      shipContainer.style.gridTemplate = \"auto auto auto auto / none\";\n    } else if (\n      shipContainer.style.gridTemplate === \"auto auto auto auto / none\"\n    ) {\n      for (const container of shipContainer.children) {\n        container.style.flexDirection = \"column\";\n        container.classList.add(\"Vertical\");\n        container.classList.remove(\"Horizontal\");\n      }\n      shipContainer.style.gridTemplate = \"none/ auto auto auto auto\";\n    } else {\n      for (const container of shipContainer.children) {\n        container.style.flexDirection = \"row\";\n        container.classList.remove(\"Vertical\");\n        container.classList.add(\"Horizontal\");\n      }\n      shipContainer.style.gridTemplate = \"auto auto auto auto / none\";\n    }\n  };\n  return (\n    <div className=\"App\">\n      <h1 className=\"Title\"> Enter the name of The city and Click on Search</h1>\n      <div className=\"game-chacarteristics\">\n        {numberShips.map((value, index) => (\n          <div className={`${value.Name}-number-container`} key={index}>\n            <label className={`${value.Name}-number-label`}>\n              Number of {value.Name}\n            </label>\n            <input\n              type=\"number\"\n              defaultValue=\"0\"\n              min=\"0\"\n              max=\"4\"\n              onChange={value.Function}\n            />\n          </div>\n        ))}\n        <button type=\"button\" onClick={placePieces}>\n          Aceept\n        </button>\n      </div>\n      <button onClick={rotate}>Rotate</button>\n      <button onClick={startGame}>Start game</button>\n\n      <div className=\"Boards\">\n        <Ships Drag={draggingShips} Ships={shipTypes} />\n\n        <Board\n          Play={false}\n          Squares={squares}\n          className=\"Board-P1\"\n          Player={1}\n          Position=\"\"\n          GameNumber={gameNumber}\n        />\n        <Board\n          Play={boardPlay}\n          Squares={squares}\n          className=\"Board-P2\"\n          Player={2}\n          Position={shipPosition}\n          Targets={numberTargets}\n          GameNumber={gameNumber}\n        />\n      </div>\n\n      <div id=\"Winning-message\">\n        <h1>You Won :)</h1>\n        <button onClick={newGame}>Play Again!</button>\n      </div>\n      <div id=\"Losing-message\">\n        <h1>You Lost :( </h1>\n        <button onClick={newGame}>Play Again!</button>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}